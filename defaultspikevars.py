# Default spike variants
def get_mstrings():
    mstrings = [
        '[]!',
        '[L5.,D614G]!',
        '[L5.,S477N,D614G]!',
        '[L5.,N501*,D614G]!',
        '[L5.,N439K,D614G]!',
        '[L5.,T732A,D614G]!',
        '[L5.,T20I,D614G]!',
        '[L5.,D138Y,D614G]!',
        '[L5.,L18.,D614G,A222V]!',
        '[L5.,D614G,P681*]!',
        '[D614G,Q677*]!',
        '[D614G,Q675*]!',
        '[T20T,H69-,V70-,Y144-,W152W,E484E,F490F,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144Y,W152W,E484E,F490F,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144-,W152W,E484E,F490F,N501Y,A570D,D614G,P681R,T716I,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144-,W152W,E484E,F490F,N501Y,A570D,D614G,P681H,T716T,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144-,W152R,E484.,F490.,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144-,W152.,E484K,F490.,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[T20T,H69-,V70-,Y144-,W152W,E484E,F490S,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[T20I,H69-,V70-,Y144-,W152W,E484E,F490.,N501Y,A570D,D614G,P681H,T716I,S982A,D1118H]',
        '[L18.,D80A,D215G,L242-,A243-,L244-,K417N,E484K,N501Y,D614G,A701V]',
        '[L18.,T20N,P26S,D138.,R190S,K417.,E484K,N501Y,D614G,H655Y,T1027I,V1176F]',
        '[T19R,V70V,T95.,G142.,E156-,F157-,R158G,A222A,W258W,K417K,L452R,T478K,D614G,P681R,D950.]',
        '[T19R,V70V,T95.,G142.,E156-,F157-,R158G,A222V,W258W,K417K,L452R,T478K,D614G,P681R,D950N]',
        '[T19R,V70F,T95.,G142.,E156-,F157-,R158G,A222V,W258W,K417N,L452R,T478K,D614G,P681R,D950N]',
        '[T19R,V70V,T95I,G142.,E156-,F157-,R158G,W258L,K417N,L452R,T478K,D614G,P681R,D950N]',
        '[S13I,W152C,L452R,D614G]',
        '[T95T,K417K,E484K,N501N,D614G,F888F,V1176F]',
        '[Q52R,A67V,H69-,V70-,Y144-,E484K,D614G,Q677H,F888L]',
        '[L5.,T95I,D253G,S477.,E484.,D614G,A701V,Q957Q]',
        '[L5.,T95I,D253G,S477N,D614G,A701A,Q957R]',
        '[D80G,Y144-,F157S,L452R,D614G,T859N,D950H]',
        '[T95.,G142.,E154.,E156E,F157F,R158R,L452R,E484Q,D614G,P681R,Q1071.]',
        '[G75V,T76I,R246.,S247-,Y248-,L249-,T250-,P251-,G252-,D253-,L452Q,F490S,D614G,T859N]',
        '[L18.,L452R,N501Y,D614D,A653V,H655Y,D796Y,G1219V]',
        '[F157L,V367F,Q613H,D614D,P681R]',
        '[T478K,D614G,P681H,T732A]',
        '[W152L,E484K,D614G,G769V]',
        '[S494P,N501N,D614G,P681H,T716I,S982S,D1118D]',
        '[H69-,V70-,L189F,N439K,D614G,V772I]',
        '[S13S,G142-,V143-,A222A,L452R,E484E,D614G,Q677Q,P681P,T859T,D950D]',
        '[Q414K,N450K,D614G,T716I]',
        '[S12F,H69-,V70-,W152R,R346S,L452R,D614G,Q677H,A899S]',
        '[E156-,F157-,R158-,F306L,E484K,S494P,D614G,E780A,D839V,T1027I]',
        '[P26S,H69-,V70-,V126A,Y144-,L242-,A243-,L244-,H245Y,S477N,E484K,D614G,P681H,T1027I,D1118H]',
        '[S494P,N501Y,D614G,P681H,K854N,E1111K]',
        '[T95I,Y144-,E484K,D614G,P681H,D796H]',
        '[I210T,N440K,E484K,D614G,D936N,S939F,T1027I]',
        '[T95I,Y144S,Y145N,R346K,E484K,N501Y,D614G,P681H,D950N]',
    ]
    return mstrings

def get_colors():
    colors = [
        '#FFFAF0',
        '#DCDCDC',
        '#DCDCDC',
        '#DCDCDC',
        '#DCDCDC',
        '#DCDCDC',
        '#DCDCDC',
        '#DCDCDC',
        '#D3D3D3',
        '#FF00FF',
        '#FF00FF',
        '#FF00FF',
        '#FFA500',
        '#FFA500',
        '#FFA500',
        '#FFA500',
        '#FF7F50',
        '#F08080',
        '#FFD700',
        '#DAA520',
        '#DDA0DD',
        '#B22222',
        '#8A2BE2',
        '#00FFFF',
        '#FFB6C1',
        '#DA70D6',
        '#00008B',
        '#FF0000',
        '#8FBC8F',
        '#800080',
        '#32CD32',
        '#7CFC00',
        '#8B008B',
        '#008000',
        '#7FFFD4',
        '#D2691E',
        '#4169E1',
        '#FF69B4',
        '#556B2F',
        '#FFFF00',
        '#778899',
        '#E6E6FA',
        '#228B22',
        '#CD5C5C',
        '#5F9EA0',
        '#B0C4DE',
        '#FFE4B5',
        '#4B0082',
        '#E0FFFF',
    ]
    return colors

def get_names():
    names = [
        'Ancestral',
        'G-clade',
        'G-clade',
        'G-clade',
        'G-clade',
        'G-clade',
        'G-clade',
        'G-clade',
        'GV-clade',
        'Near-Furin',
        'Near-Furin',
        'Near-Furin',
        'B.1.1.7=Alpha',
        'B.1.1.7=Alpha',
        'B.1.1.7=Alpha',
        'B.1.1.7=Alpha',
        'Alpha+W152R',
        'Alpha+E484K',
        'Alpha+F490S',
        'Alpha+T20I',
        'B.1.351=Beta',
        'P.1=Gamma',
        'B.1.617.2=Delta',
        'Delta+A222V',
        'Delta-AY.2',
        'Delta-AY.1',
        'B.1.429/7=Epsilon',
        'P.2=Zeta',
        'B.1.525=Eta',
        'B.1.526=Iota',
        'B.1.526.2',
        'B.1.526.1',
        'B.1.617.1=Kappa',
        'C.37=Lambda',
        'A.27',
        'A23.1',
        'B.1.1.519',
        'R.1',
        'B.1.575',
        'B.1.258.17',
        'A.2.5.2',
        'B.1.214.2',
        'C.36',
        'B.1.1.523',
        'B.1.620',
        'B.1.623',
        'B.1.1.318',
        'B.1.619',
        'B.1.621',
    ]
    return names

if __name__ == '__main__':
    import spikevariantsx as spikevariants
    mstrings = get_mstrings()
    colors = get_colors()
    names = get_names()
    vocs = [spikevariants.VOC(m,c,n)
            for m,c,n in zip(mstrings,colors,names)]
    svar = spikevariants.SpikeVariants().init_from_vocs(vocs)
    svar.pprint()
